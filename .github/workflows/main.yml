name: Publish Docker image

on:
  push:
    branches: ['main']

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub

    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PAT }}

      - name: Build and push images
        id: push_images
        run: |
          docker build -t alonecat/photo-stock-nginx:latest -f nginx/Dockerfile ./nginx
          docker push alonecat/photo-stock-nginx:latest
          docker build -t alonecat/photo-stock-frontend:latest -f Dockerfile .
          docker push alonecat/photo-stock-frontend:latest

      - name: Set up Docker context for remote server
        if: steps.push_images.conclusion == 'success'
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key
          chmod 600 private_key
          
          docker context create remote \
          --docker "host=ssh://$${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}" \
          --description "Remote Docker server"
          
          # Use the created context
          docker context use remote

      - name: Run Docker Compose commands remotely
        if: steps.push_images.conclusion == 'success'
        run: |
          docker-compose -f docker-compose.prod.yml -f docker-compose.common.yml down
          docker-compose -f docker-compose.prod.yml -f docker-compose.common.yml pull
          docker-compose -f docker-compose.prod.yml -f docker-compose.common.yml up -d
