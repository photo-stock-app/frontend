name: Publish Docker image

on:
  push:
    branches: ['main']

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub

    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PAT }}

      - name: Build and push images
        id: push_images
        run: |
          docker build -t alonecat/photo-stock-nginx:latest -f nginx/Dockerfile ./nginx
          docker push alonecat/photo-stock-nginx:latest
          docker build -t alonecat/photo-stock-frontend:latest -f Dockerfile .
          docker push alonecat/photo-stock-frontend:latest

      - name: Deploy using ssh
        if: steps.push_images.conclusion == 'success'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            mkdir -p ${{ secrets.SSH_COMPOSE_DIR }}
            scp -o StrictHostKeyChecking=no docker-compose.prod.yml docker-compose.common.yml ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:${{ secrets.SSH_COMPOSE_DIR }}

            # Ensure the directory is set
            cd ${{ secrets.SSH_COMPOSE_DIR }}

            # Create .env file
            echo "GQL_HOST=http://persons-web-1.local/wp/graphql" > .env
            echo "APP_PORT=${{ secrets.APP_PORT }}" >> .env

            # Stop and remove existing containers
            docker-compose -f docker-compose.prod.yml -f docker-compose.common.yml down

            # Pull the latest images
            docker-compose -f docker-compose.prod.yml -f docker-compose.common.yml pull

            # Start the new containers
            docker-compose -f docker-compose.prod.yml -f docker-compose.common.yml up -d
