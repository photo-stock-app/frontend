name: Publish Docker image

on:
  push:
    branches: ['main']

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub

    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PAT }}

      - name: Build and push images
        id: push_images
        run: |
          docker build -t alonecat/photo-stock-nginx:latest -f nginx/Dockerfile ./nginx
          docker push alonecat/photo-stock-nginx:latest
          docker build -t alonecat/photo-stock-frontend:latest -f Dockerfile .
          docker push alonecat/photo-stock-frontend:latest

      - name: Copy docker-compose files to remote server
        if: steps.push_images.conclusion == 'success'
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key
          chmod 600 private_key
          scp -o StrictHostKeyChecking=no -i private_key docker-compose.prod.yml docker-compose.common.yml ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:${{ secrets.SSH_COMPOSE_DIR }}
          rm private_key
      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy using ssh
        if: steps.push_images.conclusion == 'success'
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} << 'EOF'
            cd ${{ secrets.SSH_COMPOSE_DIR }}
            echo "GQL_HOST=http://persons-web-1.local/wp/graphql" > .env
            echo "APP_PORT=${{ secrets.APP_PORT }}" >> .env
            docker-compose -f docker-compose.prod.yml -f docker-compose.common.yml down
            docker-compose -f docker-compose.prod.yml -f docker-compose.common.yml pull
            docker-compose -f docker-compose.prod.yml -f docker-compose.common.yml up -d
          EOF