name: Publish Docker image

on:
  push:
    branches: ['main']

jobs:
  deploy:
    name: Deploy Docker image and stack

    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PAT }}

      - name: Build and push images
        id: push_images
        run: |
          docker build -t alonecat/photo-stock-nginx:latest -f nginx/Dockerfile ./nginx
          docker push alonecat/photo-stock-nginx:latest
          docker build -t alonecat/photo-stock-frontend:latest -f Dockerfile .
          docker push alonecat/photo-stock-frontend:latest

      - name: Set up docker context over SSH authentication
        if: steps.push_images.conclusion == 'success'
        uses: amirmarmul/docker-context-ssh-action@v1
        with:
          ssh-host: ${{ secrets.SSH_HOST }}
          ssh-username: ${{ secrets.SSH_USERNAME }}
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

     # - name: Stop and remove existing services
      #  id: remove_old_stack
      #  if: steps.push_images.conclusion == 'success'
      #  run: |
      #    echo "Stopping and removing existing services..."
      #    docker context use remote
       #   docker stack rm my_stack
          # Wait until services are removed
       #   until [ -z "$(docker stack services my_stack 2>/dev/null)" ]; do
       #     sleep 1
       #   done

      - name: Deploy Docker stack
        #if: steps.remove_old_stack.conclusion == 'success'
        run: |
          echo "Deploying stack..."
          docker context use remote
          docker stack deploy -c docker-compose.yml my_stack
